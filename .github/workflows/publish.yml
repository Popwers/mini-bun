name: Docker Hub Deployment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  check_and_update_bun_version:
    name: Check and Update Bun Version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check_version.outputs.new_version }}
      latest_version: ${{ steps.check_version.outputs.latest_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check latest Bun version
        id: check_version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/oven-sh/bun/releases/latest | jq -r .tag_name | sed 's/^bun-//')
          CURRENT_VERSION=$(grep 'ARG BUN_VERSION=' Dockerfile | cut -d'=' -f2)
          echo "Latest version: $LATEST_VERSION"
          echo "Current version: $CURRENT_VERSION"
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
            echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

      - name: Update Dockerfile
        if: steps.check_version.outputs.new_version == 'true'
        run: |
          sed -i 's/ARG BUN_VERSION=.*/ARG BUN_VERSION=${{ steps.check_version.outputs.latest_version }}/' Dockerfile

      - name: Commit changes
        uses: EndBug/add-and-commit@v9.1.3
        with:
          author_name: Popwers
          author_email: lionel.bataille@hotmail.com
          message: 'ðŸš€ Update Bun version to ${{ steps.check_version.outputs.latest_version }}'

  docker:
    name: Release to Dockerhub
    needs: check_and_update_bun_version
    if: ${{ needs.check_and_update_bun_version.outputs.new_version == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker emulator
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            popwers/mini-bun:latest
            popwers/mini-bun:${{ needs.check_and_update_bun_version.outputs.latest_version }}
